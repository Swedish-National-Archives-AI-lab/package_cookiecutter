[tool.poetry]
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.author_email }}>"]
description = "{{ cookiecutter.project_short_description }}"
license = "{{cookiecutter.license}}"
name = "{{ cookiecutter.project_slug }}"
readme = ["README.md", "LICENSE"]
version = "0.0.1"

documentation = "https://{{ cookiecutter.github_username }}.github.io/{{ cookiecutter.project_slug }}"
repository = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]

packages = [{include = "{{ cookiecutter.package_name }}", from = "src"}]

[tool.poetry.dependencies]
pandas = "*"
python = ">={{ cookiecutter.python_interpreter }}, <4.0"

[tool.poetry.group.test.dependencies]
coverage = "*"
importlib-metadata = "==4.11.*"
mypy = "*"
pre-commit = "*"
pytest = "*"
pytest-cov = "*"
pytest-github-actions-annotate-failures = "*"
python-dotenv = "*"
rich = "*"
ruff = "*"
toml = "*"

{% if cookiecutter.include_docs_folder == "true" %}
[tool.poetry.group.docs.dependencies]
mkdocs = "*"
mkdocs-jupyter = "*"
mkdocs-material = "*"
mkdocstrings = {version = ">=0.20", extras = ["python"]}
pymdown-extensions = "*"

{% endif %}

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.pytest.ini_options]
addopts = """\
    --cov {{cookiecutter.package_name}} \
    --cov-report term-missing \
    --no-cov-on-fail \
"""
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "gpu: marks tests as gpu (deselect with '-m \"not gpu\"')",
]
pythonpath = "src"
testpaths = ["tests/unit"]

[tool.coverage.run]
source = ["src/{{cookiecutter.package_name}}"] # Adjust the source directory as needed

[tool.coverage.report]
exclude_lines = [
  "if __name__ == .__main__.:",
  "pragma: no cover",
  "def __repr__",
  "if self\\.debug",
  "raise AssertionError",
  "raise NotImplementedError",
]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true
mypy_path = "src"
no_implicit_optional = true
no_implicit_reexport = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true

[tool.ruff]
ignore = ["C901", "E501", "E741", "W605"]
line-length = 119
select = ["C", "E", "F", "I", "W"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402", "F401", "F403", "F811"]

[tool.cruft]
skip = ["src", "tests"]
